using LunaDisc.Classes.FileMan;
using System.Security.Cryptography.X509Certificates;

namespace LunaDisc
{
    public partial class MainWindow : Form
    {
        // Definitions
        DiscImage image;

        // New Functions
        private void listFiles(string path)
        {
            image.path = path;
            lvBrowser.Clear();
            List<string> directories = image.getDirectoriesInPath().strings;
            List<string> files = image.getFilesInPath().strings;

            foreach (string dir in directories)
            {
                int i = lvBrowser.Items.Add(dir).Index;
                lvBrowser.Items[i].Group = lvBrowser.Groups[(int)Data.BrowserIndexes.Folder];
                lvBrowser.Items[i].ImageIndex = (int)Data.BrowserIndexes.Folder;
            }

            foreach (string file in files)
            {
                int i = lvBrowser.Items.Add(file).Index;
                lvBrowser.Items[i].Group = lvBrowser.Groups[(int)Data.BrowserIndexes.File];
                lvBrowser.Items[i].ImageIndex = (int)Data.BrowserIndexes.File;
            }
        }

        // Runtime - Autogenerated Event Functions
        public MainWindow()
        {
            InitializeComponent();
        }

        private void tsbOpenImage_Click(object sender, EventArgs e)
        {
            OpenFileDialog ofd = new OpenFileDialog();
            ofd.Multiselect = false;
            ofd.Filter = "CD-ROM Disc Image|*.iso|" +
                "All Files|*.*";
            DialogResult dr = ofd.ShowDialog();

            if (dr == DialogResult.OK)
            {
                image = new DiscImage(ofd.FileName, Classes.Codes.Types.TYPE_CD_DISC);
                tstActiveDirectory.Text = "\\";
                listFiles("\\");
            }
        }

        private void lvBrowser_Resize(object sender, EventArgs e)
        {
            tstActiveDirectory.Width = toolStrip.Width - tsbOpenImage.Width;
        }

        private void tstActiveDirectory_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)Keys.Return)
            {
                listFiles(tstActiveDirectory.Text);
            }
        }

        private void MainWindow_Load(object sender, EventArgs e)
        {
            tstActiveDirectory.Width = toolStrip.Width - tsbOpenImage.Width;
        }

        private void lvBrowser_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void lvBrowser_DoubleClick(object sender, EventArgs e)
        {
            if (lvBrowser.SelectedItems.Count != 0)
            {
                if (lvBrowser.SelectedItems[0].Group == lvBrowser.Groups[0])
                {
                    if (tstActiveDirectory.Text == "\\")
                    {
                        tstActiveDirectory.Text = "";
                    }
                    tstActiveDirectory.Text = tstActiveDirectory.Text + "\\" + lvBrowser.SelectedItems[0].Text;
                    listFiles(tstActiveDirectory.Text);
                }
            }
        }

        private void tsbBackDirectory_Click(object sender, EventArgs e)
        {
            if (tstActiveDirectory.Text != "\\")
            {
                var length = tstActiveDirectory.Text.Split('\\').Last().Length + 1;
                tstActiveDirectory.Text = tstActiveDirectory.Text.Remove(tstActiveDirectory.Text.Length - length, length);
            }

            if (tstActiveDirectory.Text == "")
            {
                tstActiveDirectory.Text = "\\";
            }
            listFiles(tstActiveDirectory.Text);
        }

        private void lvBrowser_Click(object sender, MouseEventArgs e)
        {
            switch (e.Button)
            {
                case MouseButtons.Right:
                    if (lvBrowser.SelectedItems.Count > 0)
                    {
                        if (lvBrowser.SelectedItems[0].Group == lvBrowser.Groups[1])
                        {
                            fileContextMenu.Show(MousePosition);
                        }
                    }
                    break;
            }
        }

        private void extractFileToolStripMenuItem_Click(object sender, EventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.FileName = lvBrowser.SelectedItems[0].Text;
            DialogResult dr = sfd.ShowDialog();

            if (dr == DialogResult.OK)
            {
                image.extractFile(image.path + "\\" + lvBrowser.SelectedItems[0].Text, sfd.FileName);
            }
        }


    }
}
